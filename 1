fpath=(~/.zsh/completion $fpath)
autoload -Uz compinit && compinit -i

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH
export PATH=/usr/bin:/usr/local/bin:$PATH:~/.toolbox/bin:/usr/local/opt/python3/bin:/Users/longren/anaconda3/bin:/Users/longren/.local/bin
# Path to your oh-my-zsh installation.
export ZSH="/Users/longren/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
#ZSH_THEME="robbyrussell"

#ZSH_THEME="agnoster"
#ZSH_THEME="passion"
ZSH_THEME="passion/passion"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in ~/.oh-my-zsh/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS=true

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
	git
	zsh-autosuggestions
	zsh-syntax-highlighting
	enhancd)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# === longren's PATH ====
alias git='/usr/bin/git'
export PATH="/opt/homebrew/bin:$PATH"
export ENHANCD_FILTER=fzy:peco:fzf:sk:zf
#ssh hosts
alias cap='ssh -i ~/awsgo/etc/keys/dev-management.pem ec2-user@54.81.92.226'
alias red='ssh longren@longren.desktop.amazon.com'
alias al='ssh -i ~/awsgo/etc/keys/global.pem ec2-user@54.165.243.97'
alias alc='ssh -i ~/awsgo/etc/keys/global.pem ec2-user@34.195.119.128'
alias ub='ssh -i ~/awsgo/etc/keys/global.pem ubuntu@52.6.188.135'
alias ldenv='ssh -i ~/awsgo/etc/keys/global.pem ec2-user@18.204.64.42'
alias boxoff="umount longren.desktop.amazon.com:/home/longren/workspace"
alias boxon="sshfs longren.desktop.amazon.com:/home/longren/workspace /Users/longren/devbox/"
alias cloud2='ssh dev-dsk-longren-2a-061f92fe.us-west-2.amazon.com'
alias cloud='mwinit --aea && ssh dev-dsk-longren-2a-061f92fe.us-west-2.amazon.com'
alias nlb='ssh -i ~/awsgo/etc/keys/global.pem ec2-user@54.200.127.181'
alias classic='ssh -i ~/awsgo/etc/keys/global.pem ec2-user@23.23.51.121'
alias cloudon="sshfs dev-dsk-longren-i3-d5825b47.us-west-2.amazon.com.:/home/longren/ /Users/longren/cloudbox/ -o auto_cache,reconnect,defer_permissions,noappledouble -o Compression=no"

alias cloudoff="umount -f /Users/longren/cloudbox"


#Brazil
alias atlasup='~/workspace/AtlasWebsite/src/AtlasWebsite/build/private/env/ruby2.3.x/  ruby2.3.x/bin/ruby rails-root/script/rails server --binding 0.0.0.0 -p 3003'
alias brmp='brazil workspace --remove --package'
alias bb=brazil-build
alias bba='brazil-build apollo-pkg'
alias bball='brc --allPackages'
alias bbb='brc --allPackages brazil-build'
alias bbcfn='brazil-build synthesize-cloud-formation'
alias bbiam='brazil-build synthesize-isengard'
alias bbppl='brazil-build synthesize-pipeline'
alias bbr='brc brazil-build'
alias bbra='bbr apollo-pkg'
alias bcreate='brazil ws create --name'
alias brc=brazil-recursive-cmd
alias bre=brazil-runtime-exec
alias bsync='brazil ws --sync --md'
alias btest='brazil-build test-integration-assert'
alias buse='brazil ws use --package'
alias bremove='brazil ws remove -p'
alias bversion='brazil ws use --versionset'
alias bws='brazil ws'
alias bwscreate='bws create -n'
alias bwsuse='bws use --gitMode -p'
alias cdpkg='cdpkg --package'
alias atlasup='cd /home/longren/workspace/Atlas/src/AtlasWebsite && brazil-runtime-exec build/private/env/ruby2.3.x/ruby2.3.x/bin/ruby rails-root/script/rails server --binding 0.0.0.0 -p 3003'
  alias awsdata='export AWS_DATA_PATH=~/workspace/Nefario/env/NefarioE2ETests-1.0/test-runtime/lib/python3.4/site-packages/botocore/data/'
  alias bb='brazil-build'
  alias bba='brazil-build apollo-pkg'
  alias bball='brc --allPackages'
  alias bbb='brc --allPackages brazil-build'
  alias bbcfn='brazil-build synthesize-cloud-formation'
  alias bbiam='brazil-build synthesize-isengard'
  alias bbipython='brazil-test-exec ipython'
  alias bbppl='brazil-build synthesize-pipeline'
  alias bbr='brc brazil-build'
  alias bbra='bbr apollo-pkg'
  alias bcreate='brazil ws create --name'
  alias boottrt='brazil-bootstrap --environmentType test-runtime'
  alias brazil-octane=~/.toolbox/bin/brazil-octane
  alias brc=brazil-recursive-cmd
  alias bre=brazil-runtime-exec
  alias bshowv='brazil vs print --versionset'
  alias bsync='brazil ws --sync --md'
  alias bte=brazil-test-exec
  alias btest='brazil-build test-integration-assert'
  alias buse='brazil ws use --package'
  alias bversion='brazil ws use --versionset'
  alias bws='brazil ws'
  alias bwscreate='bws create -n'
  alias bwsuse='bws use --gitMode -p'
  alias cdpkg='cdpkg --package'
  alias cdtod='cd ~/workspace/Nefario/src/NefarioE2ETests && boottrt && cd `boottrt`'
  alias cleanhost='/apollo/env/SDETools/bin/pkg-cache-  cleanup --days 10'
  alias cleartod='cd ~/workspace/Nefario && find . -name "*.pyc" -exec rm -f {} \;'
  alias dpbjs='sshenv ELBDataPlaneTools/cn-north-1'
  alias dpbom='sshenv ELBDataPlaneTools/ap-south-1'
  alias dpcdg='sshenv ELBDataPlaneTools/eu-west-3'
  alias dpcmh='sshenv ELBDataPlaneTools/us-east-2'
  alias dpdca='sshenv ELBDataPlaneTools/us-iso-east-1'
  alias dpdub='sshenv ELBDataPlaneTools/eu-west-1'
  alias dpfra='sshenv ELBDataPlaneTools/eu-central-1'
  alias dpgru='sshenv ELBDataPlaneTools/sa-east-1'
  alias dpiad='sshenv ELBDataPlaneTools/us-east-1'
  alias dpicn='sshenv ELBDataPlaneTools/ap-northeast-2'
  alias dplhr='sshenv ELBDataPlaneTools/eu-west-2'
  alias dpnrt='sshenv ELBDataPlaneTools/ap-northeast-1'
  alias dppdt='sshenv ELBDataPlaneTools/us-gov-west-1'
  alias dppdx='sshenv ELBDataPlaneTools/us-west-1'
  alias dpsfp='sshenv EELBDataPlaneTools/us-west-1'
  alias dpsin='sshenv ELBDataPlaneTools/ap-southeast-1'
  alias dpsyd='sshenv ELBDataPlaneTools/ap-southeast-2'
  alias dpyul='sshenv ELBDataPlaneTools/ca-central-1'
  alias dpzhy='sshenv ELBDataPlaneTools/cn-northwest-1'
  alias e=emacs
  alias ec2-ssh=/apollo/env/EC2SSHWrapper/bin/ec2-ssh
  alias ehc=/apollo/env/envImprovement/bin/expand-hostclass
  alias gamma-cust-config-tunnel='screen ssh elb-prod-iad-tools-7004.iad7.amazon.com -S SSH-TO-CXCFG-GAMMA -L 127.0.0.1:6082:elb-customer-configuration-gamma.amazon.com:80'
#Utilities
alias make_time="echo -n `date -u '+%Y-%m-%d %H:%M:%S,%3N'`"
alias ls="ls -FHG"
alias c='clear'
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'
alias diff='colordiff'
alias mount='mount |column -t'
alias h='history'
alias j='jobs -l'
alias path='echo -e ${PATH//:/\\n}'
alias now='date +"%T"'
alias nowtime=now
alias nowdate='date +"%d-%m-%Y"'
alias mtr='/usr/local/Cellar/mtr/0.87/sbin/mtr'
alias ll='ls -lGaf'
alias yubi2='scp /Users/longren/.ssh/id* longren@longren.aka.corp.amazon.com:/home/longren/.ssh'
alias pycharm='cd /Users/longren/PycharmProjects/'
alias cdkey='cd /Users/longren/awsgo/etc/keys'
alias bshow='brazil ws show'
alias bsam="brazil-build-tool-exec sam"
alias bsync='brazil ws --sync --md'


# ANDA tips
alias bbanda_all='cd ../ElbAndaCommon && bb && cd ../ElbAndaCrawlerBase && bb && cd ../ElbAndaElbLogCrawler && bb && cd ../ElbAndaDiagnosisConfigurationBase && bb && cd ../ElbAndaCrawlerProxy && bb && cd ../ElbAndaDiagnosisEngine && bb'

# Docker
alias dkrm="docker ps -a | grep "$IMG_TAG" | awk '{print $1} {print $2}' | xargs -n 2 sh -c "docker rm "$0" && docker rmi "$1"""

# Custom Tools
alias rball='/Users/longren/PycharmProjects/common_scripts/tool_scripts/git_pull_all.sh'
alias statusall='/Users/longren/PycharmProjects/common_scripts/tool_scripts/git_status_all.sh'
alias unpushall='/Users/longren/PycharmProjects/common_scripts/tool_scripts/git_unpushed_all.sh'
alias branchall='/Users/longren/PycharmProjects/common_scripts/tool_scripts/git_show_branch.sh'
alias mainlineall='/Users/longren/PycharmProjects/common_scripts/tool_scripts/git_mainline_all.sh'
alias allbb='/Users/longren/PycharmProjects/common_scripts/tool_scripts/bb_all.sh'

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/Users/longren/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/Users/longren/miniconda3/etc/profile.d/conda.sh" ]; then
        . "/Users/longren/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="/Users/longren/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

autoload bashcompinit && bashcompinit

# GoLang Setup
export PATH=$PATH:/usr/local/go/bin
export AWS_PAGER=""
source /Users/longren/enhancd/init.sh
export JAVA_TOOLS_OPTIONS="-Dlog4j2.formatMsgNoLookups=true"

# Java Setup
export JAVA_HOME=/Library/Java/JavaVirtualMachines/amazon-corretto-22.jdk/Contents/Home

# Docker clean
alias ddc='docker rm -f $(docker ps -aq)'
alias ddi='docker rmi -f $(docker images -aq)'
ldap_group_search() {
    /usr/bin/ldapsearch -LLL -x -h ldap.amazon.com -s sub -b 'ou=Groups,o=amazon.com' "(cn=$1)" memberuid | awk -F "memberuid: " '{print $2}' | grep -v '^$' | sort
}
alias ldapsearch_group='ldap_group_search'

function mcurl() {
     /usr/bin/curl "$@" -L --cookie ~/.midway/cookie --cookie-jar ~/.midway/cookie
 }

alias kinit='/usr/bin/kinit' 
alias bbdoc='brazil-test-exec sphinx-build doc build/brazil-documentation'

# History records
HISTSIZE=20000  # Increase the number of commands stored in memory
HISTFILESIZE=40000  # Increase the number of commands stored in the history file
SAVEHIST=20000  # Save the specified number of history entries when zsh exits
setopt SHARE_HISTORY  # Share history across multiple zsh sessions

# <<< node setup >>>
#export PATH="/opt/homebrew/opt/node@18/bin:$PATH"
export PATH="/usr/local/bin:$PATH"

epots() {
    # Check if an argument was provided
    if [ $# -eq 0 ]; then
        echo "Usage: epots <epoch_time>"
        return 1
    fi

    # Convert epoch to UTC time
    utc_time=$(date -u -r "$1" +"%Y-%m-%d %H:%M:%S UTC")
    
    # Get the system timezone
    system_timezone=$(ls -l /etc/localtime | sed 's/.*zoneinfo\///')
    
    # Convert epoch to system timezone time
    local_time=$(date -r "$1" +"%Y-%m-%d %H:%M:%S %Z")
    
    # Get current time in UTC
    current_epoch=$(date -u +%s)
    
    # Calculate minutes difference
    minutes_diff=$(( (current_epoch - "$1") / 60 ))
    
    # Determine if the time has passed or not yet elapsed
    if [ $minutes_diff -ge 0 ]; then
        time_status="passed"
    else
        time_status="not yet elapsed"
        minutes_diff=$((- minutes_diff))
    fi
    
    # Print results
    echo "UTC Time: $utc_time"
    echo "System Timezone ($system_timezone) Time: $local_time"
    echo "Minutes $time_status: $minutes_diff"
}
export NVM_DIR=~/.nvm
